#
# –ú–æ–¥—É–ª—å —Å—Ç–∞–¥–∏–∏ mainMenu: —è–≤–ª—è–µ—Ç—Å—è —Ç–æ—á–∫–æ–π –≤—Ö–æ–¥–∞ –¥–ª—è –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏—è —Å–æ –≤—Å–µ–º–∏ –º–æ–¥—É–ª—è–º–∏,
# –∫–æ—Ç–æ—Ä—ã–µ –Ω–∞—Ö–æ–¥—è—Ç—Å—è –≤ –≥–ª–∞–≤–Ω–æ–º –º–µ–Ω—é. –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –ø–æ–ø–∞–¥–∞–µ—Ç —Å—é–¥–∞ –ø—Ä–∏ –≤–≤–æ–¥–µ –∫–æ–º–∞–Ω–¥—ã "/main_menu".
# –í—Ö–æ–¥ –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é –∑–∞—Ç–∏—Ä–∞–µ—Ç –≤—Å–µ –∏–º–µ—é—â–∏–µ—Å—è –¥–∞–Ω–Ω—ã–µ –∏ —Å–æ—Å—Ç–æ—è–Ω–∏—è FSM.
#

import aiogram as ag

import modules.common as common
# –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º FSM –≤—Å–µ—Ö –æ—Å—Ç–∞–ª—å–Ω—ã—Ö —Å—Ç–∞–¥–∏–π, –≤ –∫–æ—Ç–æ—Ä—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ –ø–æ–ø–∞–¥–∞—é—Ç —á–µ—Ä–µ–∑ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
from modules.inMainMenu.chancelleryOrder import chancelleryOrder
from modules.inMainMenu.improvalSuggestion import improvalSuggestion
from modules.inMainMenu.staffDirectory import staffDirectory

rt = ag.Router()

# –°–æ—Å—Ç–æ—è–Ω–∏—è –∫–æ–Ω–µ—á–Ω–æ–≥–æ –∞–≤—Ç–æ–º–∞—Ç–∞
class mainMenu(ag.fsm.state.StatesGroup):
    choosingOption = ag.fsm.state.State()

# –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ —Å—Ç–∞–¥–∏–∏ mainMenu.choosingOption
MAIN_MENU_KB = ag.types.ReplyKeyboardMarkup(
    keyboard=[
        [ ag.types.KeyboardButton(text="üì© –û—Ç–ø—Ä–∞–≤–∏—Ç—å –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ –ø–æ —É–ª—É—á—à–µ–Ω–∏—é —Ä–∞–±–æ—Ç—ã –∫–æ–º–ø–∞–Ω–∏–∏ üì©") ],
        [ ag.types.KeyboardButton(text="üìù –°–¥–µ–ª–∞—Ç—å –∑–∞–∫–∞–∑ –∫–∞–Ω—Ü–µ–ª—è—Ä–∏–∏ —É HR üìù") ],
        [ ag.types.KeyboardButton(text="üë®üèª –°–ø—Ä–∞–≤–æ—á–Ω–∏–∫ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤ üë©üèº‚Äçü¶±") ],
        [ ag.types.KeyboardButton(text="üö™ –í—ã–π—Ç–∏ üö™") ]
    ],
    resize_keyboard=True,
    one_time_keyboard=True,
    input_field_placeholder=common.STD_INPUT_FIELD_PLACEHOLDER
)

# –•—ç–Ω–¥–ª–µ—Ä –∫–æ–º–∞–Ω–¥—ã /main_menu, –≤—Ö–æ–¥–Ω–∞—è —Ç–æ—á–∫–∞ –ª—é–±–æ–π —Å–µ—Å—Å–∏–∏ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π.
# –ü—Ä–∏ –≤—ã–∑–æ–≤–µ –∑–∞—Ç–∏—Ä–∞–µ—Ç –¥–∞–Ω–Ω—ã–µ –∏ —Å–æ—Å—Ç–æ—è–Ω–∏—è FSM –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –µ—Å–ª–∏ —Ç–∞–∫–∏–µ –±—ã–ª–∏
@rt.message(ag.filters.command.Command("main_menu"))
async def mainMenu_handler(message: ag.types.Message, state: ag.fsm.context.FSMContext):
    # –û—á–∏—â–∞–µ–º –¥–∞–Ω–Ω—ã–µ
    await state.clear()
    if not common.isUserWorkingInCompany(message.from_user.id):
        await message.answer(
            "üòî –ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, –≤–∞—Å –Ω–µ—Ç –≤ —Å–ø–∏—Å–∫–µ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤ –Ω–∞—à–µ–π –∫–æ–º–ø–∞–Ω–∏–∏. –í—ã –Ω–µ –º–æ–∂–µ—Ç–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è —ç—Ç–∏–º –±–æ—Ç–æ–º.\n\n" +
            "–ï—Å–ª–∏ –ø—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞, —Ç–æ –æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ HR –∏–ª–∏ —Å–∏—Å—Ç–µ–º–Ω–æ–º—É –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É –∫–æ–º–ø–∞–Ω–∏–∏."
        )
    else:
        await message.answer(
            "–í—ã –ø–µ—Ä–µ—à–ª–∏ –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ –æ–¥–∏–Ω –∏–∑ –ø—É–Ω–∫—Ç–æ–≤ –º–µ–Ω—é –Ω–∏–∂–µ.", 
            reply_markup=MAIN_MENU_KB
        )
        await state.set_state(mainMenu.choosingOption)

# –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ —Å—Ç–∞–¥–∏–∏ improvalSuggestion.anonOrNot
IMPROVALSUGGESTION_ANONORNOT_KB = ag.types.ReplyKeyboardMarkup(
    keyboard=[
        [
            ag.types.KeyboardButton(text="–ê–Ω–æ–Ω–∏–º–Ω–æ"),
            ag.types.KeyboardButton(text="–° —É–∫–∞–∑–∞–Ω–∏–µ–º –§–ò–û")
        ],
    ],
    resize_keyboard=True,
    one_time_keyboard=True,
    input_field_placeholder=common.STD_INPUT_FIELD_PLACEHOLDER
)

# –ù–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–∞ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â—É—é —Å—Ç–∞–¥–∏—é –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç –≤—ã–±—Ä–∞–Ω–Ω–æ–≥–æ –ø—É–Ω–∫—Ç–∞ –º–µ–Ω—é
@rt.message(ag.filters.StateFilter(mainMenu.choosingOption))
async def mainMenu_choosingOption_handler(message: ag.types.Message, state: ag.fsm.context.FSMContext):
    if message.text == "üì© –û—Ç–ø—Ä–∞–≤–∏—Ç—å –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ –ø–æ —É–ª—É—á—à–µ–Ω–∏—é —Ä–∞–±–æ—Ç—ã –∫–æ–º–ø–∞–Ω–∏–∏ üì©":
        await message.answer(
            "–í—ã –∂–µ–ª–∞–µ—Ç–µ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ –∞–Ω–æ–Ω–∏–º–Ω–æ –∏–ª–∏ —É–∫–∞–∑–∞–≤ –í–∞—à–µ –§–ò–û?",
            reply_markup=IMPROVALSUGGESTION_ANONORNOT_KB
        )
        await state.set_state(improvalSuggestion.anonOrNot)
    elif message.text == "üìù –°–¥–µ–ª–∞—Ç—å –∑–∞–∫–∞–∑ –∫–∞–Ω—Ü–µ–ª—è—Ä–∏–∏ —É HR üìù":
        await message.answer("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –í–∞—à–µ –§–ò–û (–æ–¥–Ω–∏–º —Å–æ–æ–±—â–µ–Ω–∏–µ–º).")
        await state.set_state(chancelleryOrder.enteringFullName)
    elif message.text == "üë®üèª –°–ø—Ä–∞–≤–æ—á–Ω–∏–∫ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤ üë©üèº‚Äçü¶±":
        # –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ —Å—Ç–∞–¥–∏–∏ staffDirectory.choosingDepartment
        staffDirectory_choosingDepartment_kb = ag.types.ReplyKeyboardMarkup(
            keyboard=
                list(map(lambda dep: [ag.types.KeyboardButton(text=dep)], common.DEPARTMENTS_IN_STAFF_INFO))
                + [[ag.types.KeyboardButton(text="‚Ü©Ô∏è –í–µ—Ä–Ω—É—Ç—å—Å—è –Ω–∞–∑–∞–¥")]],
            resize_keyboard=True,
            input_field_placeholder=common.STD_INPUT_FIELD_PLACEHOLDER
        )
        await message.answer(
            "–í—ã –∑–∞—à–ª–∏ –≤ —Å–ø—Ä–∞–≤–æ—á–Ω–∏–∫ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤ –∫–æ–º–ø–∞–Ω–∏–∏.\n\n–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ –∏–Ω—Ç–µ—Ä–µ—Å—É—é—â–∏–π –í–∞—Å –æ—Ç–¥–µ–ª.",
            reply_markup=staffDirectory_choosingDepartment_kb
        )
        await state.set_state(staffDirectory.choosingDepartment)
    elif message.text == "üö™ –í—ã–π—Ç–∏ üö™":
        await message.answer("–í—ã –≤—ã—à–ª–∏ –∏–∑ –≥–ª–∞–≤–Ω–æ–≥–æ –º–µ–Ω—é.")
        await common.executeCorrectEndingOfSession(message, state)
    else: # –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–∞–ø–∏—Å–∞–ª —á—Ç–æ-—Ç–æ –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–µ
        await message.answer(common.ANSWER_TO_INCORRECT_CHOICE_IN_KB)